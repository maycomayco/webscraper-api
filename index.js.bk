/* eslint-disable no-await-in-loop */
/* eslint-disable no-restricted-syntax */
/* eslint-disable no-console */
/* eslint-disable no-unused-vars */
/* eslint-disable import/no-extraneous-dependencies */
const { chromium } = require("playwright");
// const websites = require("./websites.json");

// const url = "https://www.imdb.com";
const PAGE_URL = "https://www.newbalance.com.ar/";
// const login_button_class = ".imdb-header__signin-text";

(async () => {
  const browser = await chromium.launch({ headless: false });
  const page = await browser.newPage();
  await page.goto(PAGE_URL);

  /*   login in to imdb */
  // await page.locator("#ap_email").fill("maycobarale@gmail.com");
  // await page.locator("#ap_password").fill("Immayco4");
  // await page.locator("#signInSubmit").click();
  // await page.locator(".ipc-button >> text=Watchlist").click();

  /* handle load more of watchlist */
  // let hasLoadMoreBtn = true;
  // while (hasLoadMoreBtn) {
  //   try {
  //     await page.waitForSelector("button.load-more", { timeout: 5000 });
  //     await page.click("button.load-more");
  //   } catch (error) {
  //     hasLoadMoreBtn = false;
  //   }
  // }

  await page.waitForSelector(".lister-list");

  /* get all movies */
  const movies = await page.evaluate(() => {
    // const { listItem, title, price } = listMovies;
    const moviesTextArray = [];
    const items = document.querySelectorAll(".lister-item");
    items.forEach((item) => {
      // const itemObject = {
      //   name: item.querySelector("h3.lister-item-header > a").innerText,
      //   url: item.querySelector("h3.lister-item-header > a").href,
      // };
      moviesTextArray.push(
        item.querySelector("h3.lister-item-header > a").innerText
      );
    });

    /* const itemObject = {
      name: item.querySelector("h3.lister-item-header > a").innerText,
      url: item.querySelector("h3.lister-item-header > a").href,
    };
      moviesTextArray.push(item.innerText); */

    return moviesTextArray;
  });

  console.log(movies.length);
  console.log(movies);
  console.log("===========================================================");

  // await page.waitForSelector(login_button_class);
  // await page.click(`a${login_button_class}`);

  /* for (const website of websites) {
    const page = await browser.newPage();
    const { name, url, productsView } = website;
    console.log(`==> ${name.toUpperCase()}`);
    await page.goto(url);
    await page.waitForSelector(productsView.listItem);
    // evaluamos codigo en la consola de la pagina, directamente en el navegador
    const productsText = await page.evaluate((productsSelectors) => {
      const { listItem, title, price } = productsSelectors;
      const productsTextArray = [];
      const products = document.querySelectorAll(listItem);
      products.forEach((product) => {
        const productObject = {
          name: product.querySelector(title).innerText,
          price: product.querySelector(price).innerText,
        };
        productsTextArray.push(productObject);
      });

      return productsTextArray;
    }, productsView);

    await page.close();

    const results = productsText
      .map((p) => ({ ...p, price: formatPrice(p.price) }))
      .sort((a, b) => a.price - b.price);

    console.log(results);
    console.log("===========================================================");
  } */
  // await page.close();

  // end of execution
  // await browser.close();
})();
